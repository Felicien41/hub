apiVersion: v1
kind: Service
metadata:
  name: kerberos-cloud-public-svc
  labels:
    app: kerberos-cloud-public-svc
spec:
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
    name: http
  selector:
    app: kerberos-cloud-public
---
{{ if .Capabilities.APIVersions.Has "networking.k8s.io/v1beta1" }}
apiVersion: networking.k8s.io/v1beta1
{{ else }}
apiVersion: networking.k8s.io/v1
{{ end }}
kind: Ingress
metadata:
  name: kerberos-cloud-public-ingress
  annotations:
    kubernetes.io/ingress.class: {{ .Values.ingress }}
    {{- if eq .Values.ingress "nginx" }}
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    {{- end }}
spec:

  {{- with .Values.kerberoshub.frontend.tls }}
  tls:
    {{- toYaml . | nindent 8 }}
  {{- end }}

  {{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1beta1" }}
  rules:
    - host: "{{ .Values.kerberoshub.frontend.url }}"
      http:
        paths:
          - path: /
            backend:
              serviceName: kerberos-cloud-public-svc
              servicePort: 80
  {{- else }}
  rules:
    - host: "{{ .Values.kerberoshub.frontend.url }}"
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: kerberos-cloud-public-svc
              port:
                number: 80
  {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kerberos-cloud-public
spec:
  replicas: {{ .Values.kerberoshub.frontend.replicas }}
  selector:
    matchLabels:
      app: kerberos-cloud-public
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: kerberos-cloud-public
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kerberoshub.frontend.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: kerberos-cloud-public
        image: "{{ .Values.kerberoshub.frontend.repository }}:{{ .Values.kerberoshub.frontend.tag }}"
        imagePullPolicy: {{ .Values.kerberoshub.frontend.pullPolicy }}
        resources:
          requests:
            memory: 10Mi
            cpu: 10m
        ports:
        - containerPort: 80
          name: http
        {{- with .Values.kerberoshub.frontend.volumeMounts}}
        volumeMounts:
          {{- toYaml . | nindent 8 }}
        {{- end }}
        env:
        - name: SSO_DOMAIN
          value: "{{ .Values.kerberoshub.frontend.ssoDomain }}"
        - name: TITLE
          value: "{{ .Values.kerberoshub.frontend.title }}"
        - name: LOGO_NAME
          value: "{{ .Values.kerberoshub.frontend.logo }}"
        - name: API_URL
          value: "" # legacy
        - name: NEW_API_URL
          value: "{{ .Values.kerberoshub.api.schema }}://{{ .Values.kerberoshub.api.url }}"
        {{ if .Values.isPrivate }}
        - name: PRIVATE_EDITION
          value: "true"
        {{ else }}
        - name: PRIVATE_EDITION
          value: "false"
        {{ end }}
        - name: PRODUCTION
          value: "true"
        - name: DEMO
          value: "false"

        # Mqtt (VERNEMQ)
        - name: MQTT_PROTOCOL
          value: "{{ .Values.mqtt.protocol }}"
        - name: MQTT_SERVER
          value: "{{ .Values.mqtt.host }}"
        - name: MQTT_PORT
          value: "{{ .Values.mqtt.port }}"
        - name: MQTT_USERNAME
          value: "{{ .Values.mqtt.username }}"
        - name: MQTT_PASSWORD
          value: "{{ .Values.mqtt.password }}"

        # Turn (Pion)
        - name: TURN_SERVER
          value: "{{ .Values.turn.host }}"
        - name: TURN_USERNAME
          value: "{{ .Values.turn.username }}"
        - name: TURN_PASSWORD
          value: "{{ .Values.turn.password }}"

        # Mixpanel for monitoring
        - name: MIXPANEL_KEY
          value: "{{ .Values.kerberoshub.frontend.mixpanel.apikey }}"

        # Sentry for fetching client side issues.
        - name: SENTRY_URL
          value: "{{ .Values.kerberoshub.frontend.sentry.url }}"

        # Stripe for billing
        - name: STRIPE_KEY
          value: "{{ .Values.kerberoshub.frontend.stripe.publicKey }}"

        # Google maps for using and displaying cameras, sites on a map
        - name: GOOGLEMAPS_KEY
          value: "{{ .Values.kerberoshub.frontend.googlemaps.apikey }}"

        # Zendesk for support
        - name: ZENDESK_URL
          value: "{{ .Values.kerberoshub.frontend.zendesk.url }}"

        # Titles and descriptions on pages
        - name: LOGIN_DESCRIPTION
          value: "{{ .Values.kerberoshub.frontend.loginDescription }}"
        - name: LOGIN_COPYRIGHT
          value: "{{ .Values.kerberoshub.frontend.loginCopyright }}"
        - name: PAGE_DASHBOARD_TITLE
          value: "{{ .Values.kerberoshub.frontend.dashboardTitle }}"
        - name: PAGE_DASHBOARD_SUB_TITLE
          value: "{{ .Values.kerberoshub.frontend.dashboardSubTitle }}"
        - name: PAGE_LATESTEVENTS_TITLE
          value: "{{ .Values.kerberoshub.frontend.latestEventsTitle }}"
        - name: PAGE_LATESTEVENTS_SUB_TITLE
          value: "{{ .Values.kerberoshub.frontend.latestEventsSubTitle }}"
        - name: PAGE_LIVESTREAM_TITLE
          value: "{{ .Values.kerberoshub.frontend.livestreamTitle }}"
        - name: PAGE_LIVESTREAM_SUB_TITLE
          value: "{{ .Values.kerberoshub.frontend.livestreamSubTitle }}"
        - name: PAGE_MEDIA_TITLE
          value: "{{ .Values.kerberoshub.frontend.mediaTitle }}"
        - name: PAGE_MEDIA_SUB_TITLE
          value: "{{ .Values.kerberoshub.frontend.mediaSubTitle }}"
        - name: PAGE_DASHBOARD_CPU_USAGE
          value: "{{ .Values.kerberoshub.frontend.cpuUsageDescription }}"
        - name: PAGE_DASHBOARD_FPS
          value: "{{ .Values.kerberoshub.frontend.framesPerSecondDescription }}"
        - name: PAGE_DASHBOARD_MLA
          value: "{{ .Values.kerberoshub.frontend.mlaUtilizationDescription }}"
        - name: PAGE_DASHBOARD_OBJECTS
          value: "{{ .Values.kerberoshub.frontend.objectsDetectedDescription }}"
